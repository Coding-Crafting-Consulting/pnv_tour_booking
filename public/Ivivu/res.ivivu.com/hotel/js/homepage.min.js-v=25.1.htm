var HotelId, HotelName, SearchType, Url, Count; var recents = []; var query = window.location.href; query = query.replace(/^.*\/\/[^\/]+/, ''); function initDatePicker(name, open_position, isCheckin, callback) { var chkIn = readCookie('di') != null && readCookie('di') != '' ? Static.convertDate(readCookie('di')) : Static.convertDate($('#datepicker-menu-chkin').val()); var chkOut = readCookie('do') != null && readCookie('do') != '' ? Static.convertDate(readCookie('do')) : Static.convertDate($('#datepicker-menu-chkout').val()); $("#" + name).daterangepicker({ minDate: moment().format("DD-MM-YYYY"), showDropdowns: !0, singleDatePicker: !0, format: "DD-MM-YYYY", startDate: isCheckin ? moment(chkIn).format("DD-MM-YYYY") : moment(chkOut).format("DD-MM-YYYY"), buttonClasses: "btn btn-sm btn-flat", applyClass: "btn-success bg-blue", opens: open_position, locale: { format: "DD-MM-YYYY", cancelLabel: 'Đóng', applyLabel: 'Chọn', } }, function (start, end, label) { if (callback != undefined) { callback(start, end, label) } }) }
var App = function () {
    var handleHomeSlider = function () { if ($('#slider-with-blocks').length > 0) { $('#slider-with-blocks').royalSlider({ arrowsNav: !0, arrowsNavAutoHide: !0, controlNavEnabled: !1, fadeinLoadedSlide: !0, imageScaleMode: 'fill', imageAlignCenter: !0, autoScaleSlider: !0, autoScaleSliderWidth: 1440, autoScaleSliderHeight: 540, blockLoop: !0, loop: !0, numImagesToPreload: 6, transitionType: 'slide', keyboardNavEnabled: !0, block: { delay: 400, fadeEffect: !1, moveEffect: 'left' }, autoPlay: { enabled: !0, pauseOnHover: !0, delay: 10000 }, }) } }
    var handleHomeTestimonial = function () { $('.owl-testimonial').owlCarousel({ navigation: !0, autoPlay: !0, singleItem: !0, navigationText: ["<i class=\"entypo\" aria-hidden=\"true\" data-icon=\"&#59229;\"></i>", "<i class=\"entypo\" aria-hidden=\"true\" data-icon=\"&#59230;\"></i>"], items: 1 }) }
    var handleHomeHandbook = function () { $('.owl-handbook').owlCarousel({ navigation: !0, autoPlay: !0, stopOnHover: !0, navigationText: ["<i class=\"entypo\" aria-hidden=\"true\" data-icon=\"&#59237;\"></i>", "<i class=\"entypo\" aria-hidden=\"true\" data-icon=\"&#59238;\"></i>"], itemsDesktop: [1199, 4], itemsDesktopSmall: [979, 3], itemsTablet: [768, 2], itemsMobile: [479, 1] }) }
    var handleHomeCarousel = function () { $('.carousel-wrap').owlCarousel({ navigation: !1, autoPlay: !0, singleItem: !0, items: 1 }) }
    var handleHomePopular = function () { $('.popular-wrap').mCustomScrollbar({ theme: "light-thick", scrollbarPosition: "outside" }) }
    var handleHomeSuggest = function () {
        if ($('#search-home-text').length > 0) {
            $('#search-home-text').focusin(function () {
                var val = $("#search-home-text").val(); if ($(".search-suggest").is(':hidden') && val.length === 0 && val != undefined && val != null) { $(".search-suggest").show() }
                if (val.length !== 0) { $(".search-suggest").hide() }
            }).keyup(function () { var val = $(this).val(); if (val.length === 0) { $(".search-suggest").show() } else { $(".search-suggest").hide() } }); $(window).click(function () { if (!$("#search-home-text").is(":focus")) { $(".search-suggest").hide() } }).keydown(function () { if (!$("#search-home-text").is(":focus")) { $(".search-suggest").hide() } })
        }
    }
    var iViVuReason = function () { $('.homewhy-item span').click(function () { var item_id = $(this).data("whyitem"); if (item_id != null && item_id != undefined && item_id != "") { $("#homewhy-item-content-" + item_id).slideToggle("fast") } }) }
    return { init: function () { handleHomeSlider(); handleHomeSuggest(); handleHomePopular(); handleHomeCarousel(); handleHomeHandbook(); handleHomeTestimonial(); iViVuReason() }, }
}(); function addQuery(q) { var key = q.split('=')[0]; var reg = new RegExp('([?&])' + key + '=[^&]*'); if (reg.test(query)) removeQuery(key); query += query.indexOf('?') == -1 ? "?" + q : "&" + q }
function removeQuery(param) { var reg = new RegExp('([?&])' + param + '=[^&]*'); query = query.replace(reg, function (m) { if (m[0] == "?") return "?"; else return "" }); var reg1 = /(\?&)|(&$)|(\?$)/; query = query.replace(reg1, function (m) { if (m == "?&") return "?"; else return "" }) }
function getUrlParameter(name) { name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]'); var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'); var results = regex.exec(location.search); return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' ')) }; angular.module('Contracting').controller('homepage.ctrl', ['$scope', '$sce', '$timeout', '$interval', function ($scope, $sce, $timeout, $interval) {
    var chkIn = readCookie('di') != null && readCookie('di') != '' ? Static.convertDate(readCookie('di')) : Static.convertDate($('#datepicker-menu-chkin').val()); var chkOut = readCookie('do') != null && readCookie('do') != '' ? Static.convertDate(readCookie('do')) : Static.convertDate($('#datepicker-menu-chkout').val()); $scope.DateCheckinStr = moment(chkIn).format('DD-MM-YYYY'); $scope.DateCheckoutStr = moment(chkOut).format('DD-MM-YYYY'); $scope.DayOfWeekCheckinStr = moment(chkIn).format('dddd'); $scope.DayOfWeekCheckoutStr = moment(chkOut).format('dddd'); var nocacheKey = 'GetNoCache'; $scope.GetNoCache = LocalStorageManager.getValue(nocacheKey); if ($scope.GetNoCache == null)
        $scope.GetNoCache = !1; $scope.$watch('GetNoCache', function (newValue, oldValue) { if (newValue != oldValue) { LocalStorageManager.setValue(nocacheKey, newValue) } })
    var _s = new Date(chkIn); var _e = new Date(chkOut); var diff = new Date(_e - _s); $scope.NumberNights = diff / 1000 / 60 / 60 / 24; initDatePicker("check-in-date-search", "right", !0, function (start, end, label) { $('#datepicker-menu-chkin').val(start.format('DD-MM-YYYY')); $('#datepicker-menu-chkin').trigger("change"); var chkOut = Static.convertDate($('#datepicker-menu-chkout').val()); var scope = angular.element(".main-home").scope(); scope.$apply(function () { scope.DateCheckinStr = moment(start).format('DD-MM-YYYY'); scope.DateCheckoutStr = moment(chkOut).format('DD-MM-YYYY'); scope.DayOfWeekCheckinStr = moment(start).format('dddd'); scope.DayOfWeekCheckoutStr = moment(chkOut).format('dddd'); var _s = new Date(moment(start).format('YYYY-MM-DD')); var _e = new Date(chkOut); var diff = new Date(_e - _s); scope.NumberNights = diff / 1000 / 60 / 60 / 24; $("#check-out-date-search").data('daterangepicker').setStartDate(scope.DateCheckinStr); $("#check-out-date-search").data('daterangepicker').setEndDate(scope.DateCheckoutStr) }) }); initDatePicker("check-out-date-search", "left", !1, function (start, end, label) {
        var chkIn = Static.convertDate($('#datepicker-menu-chkin').val()); if (moment(chkIn).add(1, 'days').isAfter(start)) { var scope = angular.element(".main-home").scope(); $("#check-out-date-search").data('daterangepicker').setStartDate(scope.DateCheckinStr); $("#check-out-date-search").data('daterangepicker').setEndDate(scope.DateCheckoutStr); return !1 }
        $('#datepicker-menu-chkout').val(start.format('DD-MM-YYYY')); $('#datepicker-menu-chkout').trigger("change"); var scope = angular.element(".main-home").scope(); scope.$apply(function () { scope.DateCheckinStr = moment(chkIn).format('DD-MM-YYYY'); scope.DateCheckoutStr = moment(start).format('DD-MM-YYYY'); scope.DayOfWeekCheckinStr = moment(chkIn).format('dddd'); scope.DayOfWeekCheckoutStr = moment(start).format('dddd'); $("#check-out-date-search").data('daterangepicker').setStartDate(scope.DateCheckinStr); var _s = new Date(chkIn); var _e = new Date(moment(start).format('YYYY-MM-DD')); var diff = new Date(_e - _s); scope.NumberNights = diff / 1000 / 60 / 60 / 24 })
    }); $("#check-out-date-search").data('daterangepicker').setStartDate($scope.DateCheckinStr); $("#check-out-date-search").data('daterangepicker').setEndDate($scope.DateCheckoutStr); $scope.genOptionByNumber = function (start, number, firstLabel) {
        var lst = []; for (var i = start; i <= number; i++) { lst.push({ label: firstLabel != undefined ? firstLabel : (i + ''), value: i }); firstLabel = undefined }
        return lst
    }
    $scope.UserTypes = { isAgent: !1, isUser: !0, isCtv: !1, isCorp: !1, levelLogin: -1 }; $scope.AdultsConfig = $scope.genOptionByNumber(1, 30); $scope.ChildConfig = $scope.genOptionByNumber(0, 11); $scope.childAgeFrom = 0; $scope.childAgeTo = 17; $scope.RoomConfig = $scope.genOptionByNumber(1, 9); $scope.AgeChildConfig = $scope.genOptionByNumber(0, 17, "< 1")
    $scope.RoomNumber = { label: '1', value: 1 }; $scope.RoomObject = { RoomIndex: 1, Adults: { label: '1', value: 2 }, Child: { label: '0', value: 0 }, AgeChilds: [] }; var dataKey = "datakey"; $scope.saveFilterRoom = function () { dataKey = "datakey"; $scope.AdultsTotalStr = $scope.FilterRooms.RoomsRequest[0].Adults.value; $scope.ChildTotalStr = $scope.FilterRooms.RoomsRequest[0].Child.value; LocalStorageManager.setValue(dataKey, { FilterRooms: $scope.FilterRooms, RoomNumber: $scope.RoomNumber, AdultsTotalStr: $scope.FilterRooms.RoomsRequest[0].Adults.value, ChildTotalStr: $scope.ChildTotalStr }); createCookie('roomNumber', $scope.RoomNumber.value, 1); createCookie('adultNumber', $scope.AdultsTotalStr, 1); createCookie('childNumber', $scope.ChildTotalStr, 1) }; var initStorege = function () {
        dataKey = "datakey"; $scope.$storage = LocalStorageManager.getValue(dataKey); if ($scope.$storage != undefined && $scope.$storage.FilterRooms != undefined) { if ($scope.$storage.RoomNumber != undefined) { $scope.FilterRooms = $scope.$storage.FilterRooms; $scope.RoomNumber = $scope.$storage.RoomNumber; $scope.advancedFilter = $scope.$storage.advancedFilter; $scope.AdultsTotalStr = $scope.$storage.FilterRooms.RoomsRequest[0].Adults.value; $scope.ChildTotalStr = $scope.$storage.FilterRooms.RoomsRequest[0].Child.value } }
        else { $scope.FilterRooms = { HotelID: '', RoomNumber: $scope.RoomNumber.value, IsLeadingPrice: '', ReferenceClient: '', Supplier: '', CheckInDate: '', CheckOutDate: '', CountryID: '', CityID: '', NationalityID: '', RoomsRequest: [] }; $scope.FilterRooms.RoomsRequest.push($scope.RoomObject); $scope.AdultsTotalStr = $scope.FilterRooms.RoomsRequest[0].Adults.value; $scope.ChildTotalStr = $scope.FilterRooms.RoomsRequest[0].Child.value }
        addWatchChild(0)
    }
    var addWatchChild = function (index) {
        var watchChild = $scope.$watch(function () {
            if ($scope.FilterRooms.RoomsRequest[index] == undefined) { index = $scope.FilterRooms.RoomsRequest.length - 1 }
            return $scope.FilterRooms.RoomsRequest[index].Child.value
        }, function (newValue, oldValue) {
            if (newValue != oldValue || newValue != undefined) {
                var balanceNumber = $scope.FilterRooms.RoomsRequest[index].AgeChilds.length - newValue; if (balanceNumber > 0) { $scope.FilterRooms.RoomsRequest[index].AgeChilds.splice(newValue, balanceNumber) }
                else { for (var count = 0; count < Math.abs(balanceNumber); count++) { $scope.FilterRooms.RoomsRequest[index].AgeChilds.push({ label: '7', value: 7 }) } }
            }
        })
    }
    addWatchChildRoom = $scope.$watch(function () { return $scope.RoomNumber.value }, function (newValue, oldValue) { if (newValue != oldValue) { makeChangeRoomList(newValue) } })
    var makeChangeRoomList = function (newValue) {
        var balanceNumber = $scope.FilterRooms.RoomsRequest.length - newValue; if (balanceNumber > 0) { $scope.FilterRooms.RoomsRequest.splice(newValue, balanceNumber) }
        else { for (var count = 0; count < Math.abs(balanceNumber); count++) { var itemPush = { RoomIndex: $scope.FilterRooms.RoomsRequest.length + 1, Adults: { label: '1', value: 1 }, Child: { label: '0', value: 0 }, AgeChilds: [] }; $scope.FilterRooms.RoomsRequest.push(itemPush); var index = $scope.FilterRooms.RoomsRequest.length - 1; addWatchChild(index) } }
        if ((!$scope.UserTypes.isAgent && newValue > $scope.FilterRooms.RoomsRequest[0].Adults.value) || ($scope.UserTypes.isAgent && !$scope.advancedFilter && newValue > $scope.FilterRooms.RoomsRequest[0].Adults.value))
            $scope.FilterRooms.RoomsRequest[0].Adults.value = newValue
    }
    initStorege(); $scope.SearchHotel = function () {
        $scope.saveFilterRoom(); $scope.FilterRooms.CheckInDate = Static.convertDate($('#datepicker-menu-chkin').val()); $scope.FilterRooms.CheckOutDate = Static.convertDate($('#datepicker-menu-chkout').val()); createCookie('filteraction', '1', 1); if (HotelName == undefined) {
            var URL = '/request/searchautocomplete'; var keyword = $('#searchText').val().trim(); $.getJSON(URL, { keyword: keyword }, function (data) {
                var flag = !1; $.each(data, function (index, d) { if (d.Type == "region" && d.More != 0) { flag = !0; window.location.href = d.Path + '?di=' + $scope.FilterRooms.CheckInDate + '&do=' + $scope.FilterRooms.CheckOutDate + '&rn=' + $scope.RoomNumber.value + '&an=' + $scope.AdultsTotalStr + '&cn=' + $scope.ChildTotalStr; return !1 } }); if (!flag) {
                    if ($('#searchText').val() != undefined) { var regionSearch = $('#searchText').val().trim(); if (regionSearch != undefined) { addQuery('di=' + $scope.FilterRooms.CheckInDate); addQuery('do=' + $scope.FilterRooms.CheckOutDate); addQuery('rn=' + $scope.RoomNumber.value); addQuery('an=' + $scope.AdultsTotalStr); addQuery('cn=' + $scope.ChildTotalStr); window.location.href = query; window.location.href = '/tim-kiem?q=' + regionSearch + '&di=' + $scope.FilterRooms.CheckInDate + '&do=' + $scope.FilterRooms.CheckOutDate + '&rn=' + $scope.RoomNumber.value + '&an=' + $scope.AdultsTotalStr + '&cn=' + $scope.ChildTotalStr; return !1 } }
                    $("#homepage-search-form,#header-search-form").submit()
                }
            })
            $('#searchText').focus(); return !1
        }
        var searchHistory = { "Name": HotelName, "Link": Url, "Checkin": $scope.FilterRooms.CheckInDate, "Checkout": $scope.FilterRooms.CheckOutDate, "CheckinStr": moment(new Date($scope.FilterRooms.CheckInDate)).format('DD-MM-YYYY'), "CheckoutStr": moment(new Date($scope.FilterRooms.CheckOutDate)).format('DD-MM-YYYY'), "Room": $scope.RoomNumber.value, "Adult": $scope.AdultsTotalStr, "Children": $scope.ChildTotalStr }; if (recents.length > 10) { recents.splice(-1, 1) }
        if (JSON.stringify(recents).indexOf(JSON.stringify(searchHistory)) == -1 && HotelName != undefined) { recents.unshift(searchHistory) }
        createCookie('searchHistory', JSON.stringify(recents), 1); if (SearchType == 1) { window.location.href = query; return !1 }
        addQuery('di=' + $scope.FilterRooms.CheckInDate); addQuery('do=' + $scope.FilterRooms.CheckOutDate); addQuery('rn=' + $scope.RoomNumber.value); addQuery('an=' + $scope.AdultsTotalStr); addQuery('cn=' + $scope.ChildTotalStr); window.location.href = query
    }
    $scope.PlusOrMinusObject = function (type, action, min, max) {
        switch (type) {
            case "room": if (action == "-") { if ($scope.RoomNumber.value > min) $scope.RoomNumber.value-- }
            else if (action == "+") { if ($scope.RoomNumber.value < max) $scope.RoomNumber.value++ }
                break; case "adult": if (action == "-") { if ($scope.FilterRooms.RoomsRequest[0].Adults.value > min) $scope.FilterRooms.RoomsRequest[0].Adults.value-- }
                else if (action == "+") { if ($scope.FilterRooms.RoomsRequest[0].Adults.value < max) $scope.FilterRooms.RoomsRequest[0].Adults.value++ }
                break; case "child": if (action == "-") { if ($scope.FilterRooms.RoomsRequest[0].Child.value > min) $scope.FilterRooms.RoomsRequest[0].Child.value-- }
                else if (action == "+") { if ($scope.FilterRooms.RoomsRequest[0].Child.value < max) $scope.FilterRooms.RoomsRequest[0].Child.value++ }
                break
        }
    }
}]); $(function () {
    App.init(); var isMobileX = { Android: function () { return navigator.userAgent.match(/Android/i) }, BlackBerry: function () { return navigator.userAgent.match(/BlackBerry/i) }, iOS: function () { return navigator.userAgent.match(/iPhone|iPad|iPod/i) }, Opera: function () { return navigator.userAgent.match(/Opera Mini/i) }, Windows: function () { return navigator.userAgent.match(/IEMobile/i) }, Tablet: function () { return (navigator.userAgent.match(/Tablet|iPad|iPod/i) && window.innerWidth <= 1280 && window.innerHeight <= 800) }, any: function () { return (isMobileX.Android() || isMobileX.BlackBerry() || isMobileX.iOS() || isMobileX.Opera() || isMobileX.Windows() || $(window).width() <= 414) } }; var strHistory = readCookie('searchHistory'); if (strHistory != null) { recents = JSON.parse(strHistory) }; var timer; var locas = []; $('.search-form .typeahead').typeahead({ hint: !1, highlight: !1, minLength: 0, }, {
        displayKey: 'Name', name: 'recents', source: function (keyword, syncResults) { }, limit: 0, templates: {
            header: '<div class="col-xs-12 search-header">\
                    <div class="col-xs-12 no-padding search-header__inner">\
                        <p class="title">Tìm kiếm gần đây</p>\
                    </div>\
                </div>', suggestion: function (data) { var template = ""; return template }
        }
    }, {
        displayKey: 'Name', name: 'hots', source: function (keyword, syncResults) { if (publicHelper.isBlank(keyword)) { syncResults(hots) } }, limit: 12, templates: {
            header: '<div class="col-xs-12 search-header">\
                    <div class="col-xs-12 no-padding search-header__inner">\
                        <p class="title"> Địa điểm đang HOT nhất</p>\
                    </div>\
                </div>', footer: '<p style="float: right;padding: 0 10px;background: #ebebeb;margin-right: 10px;border-radius: 5px;color: #27bed6;" class="v-margin-left-5 v-margin-bottom-5 close-popup-autocomplete"><i class="fa fa-angle-double-up"></i></p>', suggestion: function (data) {
            data._query = data._query.trim(); var template = '<div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">\
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding search-result suggestion ">\
                            <div class="media">\
                                <div class="media-left media-middle">\
                                    <picture>\
                                        <source media="print" srcset="'+ data.Image + '" alt="' + data.Name + '">\
                                        <source media="(max-width: 1200px)" srcset="${data.Image}" alt="'+ data.Name + '">\
                                        <img class="media-object" src="'+ data.Image + '">\
                                    </picture>\
                                </div>\
                                <div class="media-body media-middle">\
                                    <h4 class="media-heading">'+ data.Name + '</h4>\
                                    <span class="search-result__description">'+ data.Description + ' KS</span>\
                                </div>\
                            </div>\
                        </div>\
                    </div>'; return template
            }
        }
        }, {
            displayKey: 'Name', source: function (keyword, syncResults, asyncResults) {
                clearTimeout(timer); timer = setTimeout(function () {
                    keyword = keyword.trim(); $.get('/GListSuggestion?key=' + keyword, function (data) {
                        locas = []; for (var i = 0; i < data.length; i++) { if (data[i].Type == 1) { locas.push({ "Type": data[i].Type, "Name": data[i].HotelName, "HotelId": data[i].HotelId, "ComboTitle": data[i].ComboTitle, "Link": data[i].HotelUrl }) } else { locas.push({ "Type": data[i].Type, "Name": data[i].RegionName, "RegionId": data[i].RegionId, "Link": data[i].RegionUrl, "Count": data[i].TotalHotels }) } }
                        if (data.length == 1) {
                            HotelName = data[0].HotelName; SearchType = data[0].Type; Url = data[0].HotelUrl; Count = data[0].Count; if (data[0].Checkin != undefined && data[0].Checkin != null) { var scope = angular.element(".main-home").scope(); scope.$apply(function () { var _s = new Date(datum.Checkin); var _e = new Date(datum.Checkout); scope.DateCheckinStr = moment(_s).format('DD-MM-YYYY'); scope.DateCheckoutStr = moment(_e).format('DD-MM-YYYY'); scope.DayOfWeekCheckinStr = moment(_s).format('dddd'); scope.DayOfWeekCheckoutStr = moment(_e).format('dddd'); $('#datepicker-menu-chkin').val(moment(_s).format('DD-MM-YYYY')); $('#datepicker-menu-chkout').val(moment(_e).format('DD-MM-YYYY')); $('#datepicker-menu-chkin').trigger("change"); $('#datepicker-menu-chkout').trigger("change"); if (data[0].Adult != undefined) scope.AdultsTotalStr = datum.Adult; if (data[0].Children != undefined) scope.ChildTotalStr = datum.Children; if (data[0].Room != undefined) scope.RoomNumber.value = datum.Room; var diff = new Date(_e - _s); scope.NumberNights = diff / 1000 / 60 / 60 / 24; $("#check-in-date-search").data('daterangepicker').setStartDate(scope.DateCheckinStr); $("#check-in-date-search").data('daterangepicker').setEndDate(scope.DateCheckinStr); $("#check-out-date-search").data('daterangepicker').setStartDate(scope.DateCheckoutStr); $("#check-out-date-search").data('daterangepicker').setEndDate(scope.DateCheckoutStr) }) }
                            query = data[0].HotelUrl
                        }
                        else { HotelName = undefined }
                        asyncResults(locas)
                    })
                }, 200)
            }, name: 'locas', limit: 20, templates: {
                suggestion: function (data) {
                    var template; if (data.Type == 1 && data.ComboTitle != null && data.ComboTitle != '') {
                        template = '<div class="col-xs-12 no-padding search-result region">\
                                <div class="pull-left search-result__content">\
                                    <i class="vicon vicon-property-name search-result__icon"></i>'+ data.Name + '\
                                </div>\
                                <div class="pull-right ">\
                                        <span class="label label-danger"><i class="vicon vicon-deal-gift-card"></i> '+ data.ComboTitle + '</span>\
                                </div> <div class="clearfix"></div>\
                                  </div>'} else if (data.Type == 1) {
                        template = '<div class="col-xs-12 no-padding search-result region">\
                                <div class="pull-left search-result__content">\
                                    <i class="vicon vicon-property-name search-result__icon"></i>'+ data.Name + '\
                                </div>\
                                 <div class="clearfix"></div>\
                                  </div>'} else {
                        template = '<div class="col-xs-12 no-padding search-result region">\
                        <div class="pull-left search-result__content"><i class="vicon vicon-cities search-result__icon"></i>'+ data.Name + '</div>\
                        <div class="pull-right search-result__description">'+ data.Count + ' KS</div>\
                        <div class="clearfix"></div>\
                    </div>'}
                    return template
                }
            }
        }).on({
            'typeahead:selected': function (e, datum) {
                if (datum.Type == 1) { HotelId = datum.HotelId }
                else if (datum.Type == 2) { RegionId = datum.RegionId }
                HotelName = datum.Name; SearchType = datum.Type; Url = datum.Link; Count = datum.Count; if (datum.Checkin != undefined && datum.Checkin != null) { var scope = angular.element(".main-home").scope(); scope.$apply(function () { var _s = new Date(datum.Checkin); var _e = new Date(datum.Checkout); scope.DateCheckinStr = moment(_s).format('DD-MM-YYYY'); scope.DateCheckoutStr = moment(_e).format('DD-MM-YYYY'); scope.DayOfWeekCheckinStr = moment(_s).format('dddd'); scope.DayOfWeekCheckoutStr = moment(_e).format('dddd'); $('#datepicker-menu-chkin').val(moment(_s).format('DD-MM-YYYY')); $('#datepicker-menu-chkout').val(moment(_e).format('DD-MM-YYYY')); $('#datepicker-menu-chkin').trigger("change"); $('#datepicker-menu-chkout').trigger("change"); if (datum.Adult != undefined) scope.AdultsTotalStr = datum.Adult; if (datum.Children != undefined) scope.ChildTotalStr = datum.Children; if (datum.Room != undefined) scope.RoomNumber.value = datum.Room; var diff = new Date(_e - _s); scope.NumberNights = diff / 1000 / 60 / 60 / 24; $("#check-in-date-search").data('daterangepicker').setStartDate(scope.DateCheckinStr); $("#check-in-date-search").data('daterangepicker').setEndDate(scope.DateCheckinStr); $("#check-out-date-search").data('daterangepicker').setStartDate(scope.DateCheckoutStr); $("#check-out-date-search").data('daterangepicker').setEndDate(scope.DateCheckoutStr) }) }
                query = datum.Link
            }, 'typeahead:autocompleted': function (e, datum) { }, 'typeahead:render': function (e, datum, c, d) { }, 'typeahead:open': function (e, datum) { }, 'keyup': function (e) { }, 'keypress': function (e, datum) { if (e.keyCode === 13) { $('.search-form-button').trigger('click'); return !1 } }
        }); $(".search-form").on('click', '.close-popup-autocomplete', function () { $('.search-form .typeahead').typeahead('close') })
})